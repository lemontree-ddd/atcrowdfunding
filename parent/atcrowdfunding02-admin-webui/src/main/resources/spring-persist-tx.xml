<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
				        http://www.springframework.org/schema/beans/spring-beans.xsd
				        http://www.springframework.org/schema/aop
				        http://www.springframework.org/schema/aop/spring-aop.xsd
				        http://www.springframework.org/schema/context
				        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 配置spring创建容器时要扫描的包-->
    <context:component-scan base-package="com.baidu.service"></context:component-scan>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="comboPooledDataSource"></property>
    </bean>

    <!--配置aop-->
    <aop:config>
        <!--配置切入点表达式  考虑到后面整合SpringSecurity,避免把UserDetailsService加入事务控制，将切入点表达式定位到其实现类-->
        <aop:pointcut id="txPointcut" expression="execution(* *..*ServiceImpl.*(..))"></aop:pointcut>
        <!--建立切入点表达式和事务通知的对应关系 advice-ref: 指向事务器的配置-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
    </aop:config>

    <!--配置事务的通知 transaction-manager="transactionManager" 指定配置哪个事务管理器-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--  事务属性-->
        <tx:attributes>
            <!-- 查询方法：配置只读属性，让数据库知道这是一个查询操作，能进行一定的优化 -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>

            <!-- 增删改方法：配置事务传播行为、回滚异常 -->
            <!-- propagation 属性配置事务方法的传播行为 -->
            <!-- 默认值：REQUIRED 表示：当前方法必须运行在事务中，如果没有事务，则开
            启事务，在自己的事务中运行。如果已经有了已开启的事务，则在当前事务中运行。有可能
            和其他方法共用同一个事务。 -->
            <!-- 建议值：REQUIRES_NEW 表示：当前方法必须运行在事务中，如果没有事务，
            则开启事务，在自己的事务中运行。和 REQUIRED 的区别是就算现在已经有了已开启的事务，
            也一定要开启自己的事务，避免和其他方法共用同一个事务。 -->
            <!-- rollback-for 属性配置回滚的异常 -->
            <!-- 默认值：运行时异常 -->
            <!-- 建议值：编译时异常+运行时异常 -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--  -->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
</beans>